(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    303604,       6231]
NotebookOptionsPosition[    238706,       4872]
NotebookOutlinePosition[    299642,       6161]
CellTagsIndexPosition[    299458,       6152]
WindowTitle->Quantum Formalism \:2013 from the Wolfram Physics Project \
Technical Background
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["8.13 Quantum Formalism", "Subsection",
 CellID->727362818],

Cell[TextData[{
 "To continue understanding how our models might relate to quantum mechanics, \
it is useful to describe a little more of the potential correspondence with \
standard quantum formalism. We consider\[LongDash]quite \
directly\[LongDash]each state in the multiway system as some quantum basis \
state ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{"S", ">"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.790217614060595*^9, 3.790217732508542*^9}, {
   3.790217777152397*^9, 3.790218035498324*^9}, {3.79021808649445*^9, 
   3.7902181198997583`*^9}, {3.7902181652167053`*^9, 3.79021824776121*^9}, {
   3.790218281150587*^9, 3.79021829954135*^9}, {3.790218330586512*^9, 
   3.790218340722207*^9}, {3.790218381383128*^9, 3.790218437626429*^9}, {
   3.7902184709914713`*^9, 3.790218490934161*^9}, {3.790218541089491*^9, 
   3.790218543209214*^9}, {3.79021857388706*^9, 3.790218648441225*^9}, {
   3.7902186795110607`*^9, 3.790218728706766*^9}, {3.790301253092978*^9, 
   3.790301285018323*^9}, {3.790301421607658*^9, 3.7903014610051413`*^9}, {
   3.790302338312518*^9, 3.790302347331092*^9}, {3.7903025175408897`*^9, 
   3.790302534668593*^9}, {3.790357631999043*^9, 3.790357632469701*^9}, {
   3.7903576693699512`*^9, 3.79035773316466*^9}, {3.791221139624535*^9, 
   3.7912211398495207`*^9}, 3.794233674110558*^9, {3.795092540844603*^9, 
   3.795092550132465*^9}, {3.795376632405204*^9, 3.795376633462653*^9}},
 CellID->1795074772],

Cell["\<\
An important feature of quantum states is the phenomenon of entanglement\
\[LongDash]which is effectively a phenomenon of connection or correlation \
between states. In our setup (as we will see more formally soon), \
entanglement is basically a reflection of common ancestry of states in the \
multiway graph. (\[OpenCurlyDoubleQuote]Interference\[CloseCurlyDoubleQuote] \
can then be seen as a reflection of merging\[LongDash]and therefore common \
successors\[LongDash]in the multiway graph.)\
\>", "Text",
 CellChangeTimes->{{3.790217614060595*^9, 3.790217732508542*^9}, {
   3.790217777152397*^9, 3.790218035498324*^9}, {3.79021808649445*^9, 
   3.7902181198997583`*^9}, {3.7902181652167053`*^9, 3.79021824776121*^9}, {
   3.790218281150587*^9, 3.79021829954135*^9}, {3.790218330586512*^9, 
   3.790218340722207*^9}, {3.790218381383128*^9, 3.790218437626429*^9}, {
   3.7902184709914713`*^9, 3.790218490934161*^9}, {3.790218541089491*^9, 
   3.790218543209214*^9}, {3.79021857388706*^9, 3.790218648441225*^9}, {
   3.7902186795110607`*^9, 3.790218728706766*^9}, {3.790301253092978*^9, 
   3.790301285018323*^9}, {3.790301421607658*^9, 3.7903014610051413`*^9}, {
   3.790302338312518*^9, 3.790302347331092*^9}, {3.7903025175408897`*^9, 
   3.790302534668593*^9}, {3.790357631999043*^9, 3.790357632469701*^9}, {
   3.7903576693699512`*^9, 3.79035773316466*^9}, {3.791221139624535*^9, 
   3.7912211398495207`*^9}, 3.794233719708193*^9, 3.794270253527397*^9, 
   3.795113714519376*^9, {3.795376634440638*^9, 3.795376637202154*^9}},
 CellID->1971419948],

Cell["\<\
Consider the following multiway graph for a string substitution system:\
\>", "Text",
 CellChangeTimes->{{3.790217614060595*^9, 3.790217732508542*^9}, {
  3.790217777152397*^9, 3.790218035498324*^9}, {3.79021808649445*^9, 
  3.7902181198997583`*^9}, {3.7902181652167053`*^9, 3.79021824776121*^9}, {
  3.790218281150587*^9, 3.79021829954135*^9}, {3.790218330586512*^9, 
  3.790218340722207*^9}, {3.790218381383128*^9, 3.790218437626429*^9}, {
  3.7902184709914713`*^9, 3.790218490934161*^9}, {3.790218541089491*^9, 
  3.790218543209214*^9}, {3.79021857388706*^9, 3.790218648441225*^9}, {
  3.7902186795110607`*^9, 3.790218728706766*^9}, {3.790301253092978*^9, 
  3.790301285018323*^9}, {3.790301421607658*^9, 3.7903014610051413`*^9}, {
  3.790302338312518*^9, 3.790302347331092*^9}, {3.7903025175408897`*^9, 
  3.790302534668593*^9}, {3.790357631999043*^9, 3.790357632469701*^9}, {
  3.7903576693699512`*^9, 3.79035773316466*^9}, {3.791221139624535*^9, 
  3.7912211398495207`*^9}},
 CellID->129876473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<AB\>\""}], ",", 
     RowBox[{"\"\<B\>\"", "\[Rule]", "\"\<A\>\""}]}], "}"}], ",", 
   RowBox[{"{", "\"\<A\>\"", "}"}], ",", "5", ",", "\"\<StatesGraph\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{3.792765547446184*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "A", "AB", "AA", "ABB", "AAB", "ABA", "ABBB", "AAA", "AABB", "ABAB", 
       "ABBA", "ABBBB", "AAAB", "AABA", "AABBB", "ABAA", "ABABB", "ABBAB", 
       "ABBBA", "ABBBBB"}, {{{1, 2}, {2, 3}, {2, 4}, {3, 5}, {4, 5}, {3, 6}, {
       4, 6}, {4, 7}, {5, 8}, {6, 8}, {5, 9}, {7, 9}, {5, 10}, {6, 10}, {7, 
       10}, {6, 11}, {7, 11}, {7, 12}, {8, 13}, {9, 13}, {10, 13}, {8, 14}, {
       9, 14}, {11, 14}, {9, 15}, {12, 15}, {8, 16}, {10, 16}, {11, 16}, {9, 
       17}, {10, 17}, {12, 17}, {10, 18}, {11, 18}, {12, 18}, {11, 19}, {12, 
       19}, {12, 20}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$20", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"A\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 4.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AABB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AAAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AABA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AABBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABAA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABABB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBBBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$20"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-2.842170943040401*^-14, 
       452.16796875}, {-160.99999999999997`, 153.11997767857147`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{453.16796875, Automatic}]], "Output",
 CellChangeTimes->{3.792765548400485*^9, 3.793660940892226*^9}]
}, {2}]],

Cell["\<\
Each pair of states generated by a branching in this graph are considered to \
be entangled. And when the graph is viewed as defining a rewrite system, \
these pairs of states can also be said to form a branch pair. \
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.791221197720092*^9, 
   3.7953766381004057`*^9},
 CellID->990496359],

Cell["\<\
Given a particular foliation of the multiway graph, we can now capture the \
entanglement of states in each slice of the foliation by forming a branchial \
graph in which we connect the states in each branch pair. For the string \
substitution system above, the sequence of branchial graphs is then:\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.791221197720092*^9, 
   3.795376638940283*^9},
 CellTags->{"FirstCellOnPage", "p-438"},
 CellID->2126557816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<AB\>\""}], ",", 
       RowBox[{"\"\<B\>\"", "\[Rule]", "\"\<A\>\""}]}], "}"}], ",", 
     RowBox[{"{", "\"\<A\>\"", "}"}], ",", "t", ",", 
     "\"\<BranchialGraph\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "2", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792765583680616*^9, 3.792765613964527*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["{",
   FontColor->None], 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{"AA", "ABB"}, {Null, {{1, 2}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, PerformanceGoal -> "Quality", 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> 
          "VertexID$2"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{0., 179.00000000000003`}, {-13.379999999999988`, 
         5.620000000000012}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{"AAB", "ABA", "ABBB"}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
        EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, PerformanceGoal -> "Quality", 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-0.8660254037844384, -0.4999999999999994}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.8369701987210297`*^-16, 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0.8660254037844389, -0.5000000000000012}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> 
          "VertexID$3"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{-1.4210854715202004`*^-14, 
         179.}, {-78.00000000000001, 70.9038105676659}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{"AAA", "AABB", "ABAB", "ABBA", "ABBBB"}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 
         5}, {4, 5}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, PerformanceGoal -> "Quality", 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 0.6036428791280587}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AABB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.006943513923487, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0.8294432880449293, 0.6024873029730559}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.008260262516205, 1.2072356645553475`}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.8707672937283246`, 0.602648036371213}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> 
          "VertexID$5"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{1.7763568394002505`*^-15, 
         179.00000000000003`}, {-61.000000000000014`, 52.86142038327061}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "AAAB", "AABA", "AABBB", "ABAA", "ABABB", "ABBAB", "ABBBA", 
         "ABBBBB"}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
         5}, {2, 6}, {2, 7}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 5}, {4, 6}, {
         4, 7}, {5, 6}, {5, 7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, PerformanceGoal -> "Quality", 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AAAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.9406239776398064`, 1.2958995863950258`}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AABA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.8364404192593762`, 0.6482952817500763}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AABBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0.7544949698076282, 1.2744662289213973`}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.9422360815287751`, 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABABB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.1485771842465324`, 0.9036793148361897}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1.1492421934451176`, 0.3911396070189008}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0.7552668089566603, 0.020929772475809627`}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBBBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 0.6469330317068042}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> 
          "VertexID$8"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{-3.552713678800501*^-15, 243.875}, {-82., 
         73.69678484898822}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{244.875, Automatic}]}], 
  StyleBox["}",
   FontColor->None]}]], "Output",
 CellChangeTimes->{3.792765614839223*^9, 3.793660954102633*^9}]
}, {2}]],

Cell["\<\
In physical terms, the nodes of the branchial graph are quantum states, and \
the graph itself forms a kind of map of entanglements between states. In \
general terms, we expect states that are closer on the branchial graph to be \
more correlated, and have more entanglement, than ones further away.\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.7912212484159193`*^9, 
   3.791221696417465*^9, 3.795376640441164*^9},
 CellID->486876491],

Cell[TextData[{
 "As we discussed in ",
 ButtonBox["5.17",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/foliations-of-the-multiway-graph-and-\
the-structure-of-branchial-space"], None},
  ButtonNote->
   "https://www.wolframphysics.org/technical-introduction/the-updating-\
process-for-string-substitution-systems/foliations-of-the-multiway-graph-and-\
the-structure-of-branchial-space"],
 ", the geometry of branchial space is not expected to be like the geometry \
of ordinary space. For example, it will not typically correspond to a \
finite-dimensional manifold. We can still think of it as a space of some kind \
that is reached in the limit of a sufficiently large multiway system, with a \
sufficiently large number of states. And in particular we can imagine\
\[LongDash]for any given foliation\[LongDash]defining coordinates of some \
kind on it, that we will denote ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["b", 
    StyleBox[
     AdjustmentBox["<",
      BoxBaselineShift->0.2],
     FontSize->-4 + Inherited],
    DiacriticalPositioning->True], TraditionalForm]]],
 ". So this means that within a foliation, any state that appears in the \
multiway system can be assigned a position ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", ",", " ", 
     OverscriptBox["b", 
      StyleBox[
       AdjustmentBox["<",
        BoxBaselineShift->0.2],
       FontSize->-4 + Inherited],
      DiacriticalPositioning->True]}], " ", ")"}], TraditionalForm]]],
 " in \[OpenCurlyDoubleQuote]multiway space\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.7912212484159193`*^9, 
   3.791221696417465*^9, 3.794233772996355*^9, 3.794233819763091*^9, {
   3.794233852501259*^9, 3.794233876311634*^9}, {3.7950430399254208`*^9, 
   3.795043079605247*^9}, 3.7951695951918297`*^9, {3.795376642092396*^9, 
   3.795376646044072*^9}},
 CellID->1020489167],

Cell["\<\
In the standard formalism of quantum mechanics, states are thought of as \
vectors in a Hilbert space, and now these vectors can be made explicit as \
corresponding to positions in multiway space. \
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.7912212484159193`*^9, 
   3.791221696417465*^9, 3.795376646862632*^9},
 CellID->1557024827],

Cell["\<\
But now there is an additional issue. The multiway system should represent \
not just all possible states, but also all possible paths leading to states. \
And this means that we must assign to states a weight that reflects the \
number of possible paths that can lead to them:\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.7912212484159193`*^9, 
   3.791221696417465*^9, 3.7953766477037973`*^9},
 CellID->1828028694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<AB\>\""}], ",", 
       RowBox[{"\"\<B\>\"", "\[Rule]", "\"\<A\>\""}]}], "}"}], ",", 
     RowBox[{"{", "\"\<A\>\"", "}"}], ",", "5", ",", "\"\<StatesGraph\>\"", 
     ",", 
     RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", "True"}]}], "]"}], 
   ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<VertexWeight\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.792765676935946*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "A", "AB", "AA", "ABB", "AAB", "ABA", "ABBB", "AAA", "AABB", "ABAB", 
       "ABBA", "ABBBB", "AAAB", "AABA", "AABBB", "ABAA", "ABABB", "ABBAB", 
       "ABBBA", "ABBBBB"}, {{{1, 2}, {2, 3}, {2, 4}, {3, 5}, {4, 5}, {3, 6}, {
       4, 6}, {4, 7}, {5, 8}, {6, 8}, {5, 9}, {7, 9}, {5, 10}, {6, 10}, {7, 
       10}, {6, 11}, {7, 11}, {7, 12}, {8, 13}, {9, 13}, {10, 13}, {8, 14}, {
       9, 14}, {11, 14}, {9, 15}, {12, 15}, {8, 16}, {10, 16}, {11, 16}, {9, 
       17}, {10, 17}, {12, 17}, {10, 18}, {11, 18}, {12, 18}, {11, 19}, {12, 
       19}, {12, 20}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, GraphLayout -> {"Dimension" -> 2}, 
       PerformanceGoal -> "Quality", VertexLabels -> {"VertexWeight"}, 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }, 
       VertexWeight -> {1, 1, 1, 1, 2, 2, 1, 4, 3, 5, 3, 1, 12, 10, 4, 12, 9, 
        9, 4, 1}}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$20", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"A\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 5.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 4.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 3.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 2.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AABB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {2., 1.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AAAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-3., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AABA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-2., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"AABBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABAA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {-1., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABABB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {0., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBAB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {2., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBBA\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {3., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          InsetBox[
           FormBox[
            FrameBox[
             StyleBox["\"ABBBBB\"", 
              Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
             Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
            TraditionalForm], {4., 0.}, 
           ImageScaled[{
             Rational[1, 2], 
             Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$20"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$20"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{2.842170943040401*^-14, 
       437.21683673469386`}, {-161.19387755102005`, 153.2467201166181}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{439.3671875, Automatic}]], "Output",
 CellChangeTimes->{3.792765677674972*^9, 3.793660972203381*^9},
 CellTags->{"FirstCellOnPage", "p-439"}]
}, {2}]],

Cell["\<\
In effect, therefore, each branchlike hypersurface can be thought of as \
exposing some linear combination of basic states, each one with a certain \
weight:\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304765338739*^9}, {3.790304799558015*^9, 3.790304814738801*^9}, {
   3.790554334724443*^9, 3.7905543376285553`*^9}, 3.7912212484159193`*^9, 
   3.791221759277894*^9, {3.791221872389264*^9, 3.7912218725652523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"WeightedBranchialGraph", "[", 
   RowBox[{"rule_", ",", "init_", ",", "t_", ",", 
    RowBox[{"mult_", ":", "1"}], ",", 
    RowBox[{"labs_", ":", "True"}]}], "]"}], ":=", 
  RowBox[{"WeightedBranchial", "[", 
   RowBox[{
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
       
       RowBox[{
       "rule", ",", "init", ",", "t", ",", "\"\<BranchialGraphStructure\>\"", 
        ",", 
        RowBox[{"\"\<IncludeStatePathWeights\>\"", "\[Rule]", "True"}]}], 
       "]"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{"labs", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<VertexWeight\>\""}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], "]"}], ",", "mult"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WeightedBranchial", "[", 
   RowBox[{"g_", ",", 
    RowBox[{"mult_", ":", "12"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cc", "=", 
      RowBox[{"AnnotationValue", "[", 
       RowBox[{"g", ",", "VertexWeight"}], "]"}]}], "}"}], ",", 
    RowBox[{"Graph", "[", 
     RowBox[{"g", ",", 
      RowBox[{"VertexStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"VertexSize", "\[Rule]", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", 
         RowBox[{"mult", "*", 
          RowBox[{"(", 
           RowBox[{"cc", "/", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Total", "[", 
              RowBox[{"cc", "^", "2"}], "]"}], "]"}]}], ")"}]}]}], "]"}]}]}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"WeightedBranchialGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<AB\>\""}], ",", 
       RowBox[{"\"\<B\>\"", "\[Rule]", "\"\<A\>\""}]}], "}"}], ",", 
     RowBox[{"{", "\"\<A\>\"", "}"}], ",", "t", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{".2", ",", ".2", ",", ".6", ",", "1", ",", "2", ",", "3"}], 
       "}"}], "[", 
      RowBox[{"[", 
       RowBox[{"t", "-", "1"}], "]"}], "]"}], ",", 
     RowBox[{"t", "\[LessEqual]", "5"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "2", ",", "7"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.792765771793441*^9, 3.7927657897044907`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["{",
   FontColor->None], 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{"AA", "ABB"}, {Null, {{1, 2}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, GraphLayout -> {"Dimension" -> 2}, 
         PerformanceGoal -> "Quality", VertexLabels -> {"VertexWeight"}, 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$0a651e1462ad4237b51d97011f4d7613`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "ABB" -> Automatic, 
           "AA" -> Automatic}, 
         VertexSize -> {
          "ABB" -> 0.1414213562373095, "AA" -> 0.1414213562373095}, 
         VertexStyle -> {
           RGBColor[1, 0, 0]}, VertexWeight -> {1, 1}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         RGBColor[1, 0, 0], 
         TagBox[{
           TagBox[
            DiskBox[{1., 0.}, 0.1414213562373095], "DynamicName", BoxID -> 
            "VertexID$1"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            DiskBox[{-1., 0.}, 0.1414213562373095], "DynamicName", BoxID -> 
            "VertexID$2"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.5591184849389226`, 
         180.00412443041924`}, {-24.004124430419186`, 12.769871468224846`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{"AAB", "ABA", "ABBB"}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
        EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, GraphLayout -> {"Dimension" -> 2}, 
         PerformanceGoal -> "Quality", VertexLabels -> {"VertexWeight"}, 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$0a651e1462ad4237b51d97011f4d7613`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "ABBB" -> Automatic, 
           "ABA" -> Automatic, "AAB" -> Automatic}, 
         VertexSize -> {
          "ABA" -> 0.13333333333333333`, "AAB" -> 0.13333333333333333`, 
           "ABBB" -> 0.06666666666666667}, VertexStyle -> {
           RGBColor[1, 0, 0]}, VertexWeight -> {2, 2, 1}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         RGBColor[1, 0, 0], 
         TagBox[{
           TagBox[
            
            DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
             0.11547005383792512`], "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["2", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            DiskBox[{1.8369701987210297`*^-16, 1.}, 0.11547005383792512`], 
            "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["2", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8660254037844389, -0.5000000000000012}, 
             0.05773502691896256], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$3"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.5266505545561593`, 
         180.01053736163294`}, {-90.01053736163317, 79.48319817388074}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{"AAA", "AABB", "ABAB", "ABBA", "ABBBB"}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 
         5}, {4, 5}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, GraphLayout -> {"Dimension" -> 2}, 
         PerformanceGoal -> "Quality", VertexLabels -> {"VertexWeight"}, 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$0a651e1462ad4237b51d97011f4d7613`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "ABAB" -> Automatic, 
           "ABBA" -> Automatic, "AAA" -> Automatic, "ABBBB" -> Automatic, 
           "AABB" -> Automatic}, 
         VertexSize -> {
          "ABBA" -> 0.232379000772445, "ABAB" -> 0.38729833462074165`, "AABB" -> 
           0.232379000772445, "AAA" -> 0.3098386676965933, "ABBBB" -> 
           0.07745966692414832}, VertexStyle -> {
           RGBColor[1, 0, 0]}, VertexWeight -> {4, 3, 5, 3, 1}}]], 
      Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         RGBColor[1, 0, 0], 
         TagBox[{
           TagBox[
            DiskBox[{0., 0.6036428791280587}, 0.09730331304912726], 
            "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            DiskBox[{1.006943513923487, 0.}, 0.07297748478684545], 
            "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["3", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.8294432880449293, 0.6024873029730559}, 
             0.12162914131140908`], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["5", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.008260262516205, 1.2072356645553475`}, 
             0.07297748478684545], "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["3", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.8707672937283246`, 0.602648036371213}, 
             0.024325828262281815`], "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$5"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.5102040816326507`, 
         180.01415921882892`}, {-71.01415921882882, 60.25917543742385}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "AAAB", "AABA", "AABBB", "ABAA", "ABABB", "ABBAB", "ABBBA", 
         "ABBBBB"}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {2, 4}, {2, 
         5}, {2, 6}, {2, 7}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {4, 5}, {4, 6}, {
         4, 7}, {5, 6}, {5, 7}, {5, 8}, {6, 7}, {6, 8}, {7, 8}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, GraphLayout -> {"Dimension" -> 2}, 
         PerformanceGoal -> "Quality", VertexLabels -> {"VertexWeight"}, 
         VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$0a651e1462ad4237b51d97011f4d7613`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "ABABB" -> Automatic, 
           "ABBBA" -> Automatic, "AAAB" -> Automatic, "ABAA" -> Automatic, 
           "ABBBBB" -> Automatic, "ABBAB" -> Automatic, "AABA" -> Automatic, 
           "AABBB" -> Automatic}, 
         VertexSize -> {
          "AAAB" -> 12 583^Rational[-1, 2], "ABBBA" -> 4 583^Rational[-1, 2], 
           "ABAA" -> 12 583^Rational[-1, 2], "ABBAB" -> 9 583^Rational[-1, 2],
            "ABABB" -> 9 583^Rational[-1, 2], "AABA" -> 
           10 583^Rational[-1, 2], "AABBB" -> 4 583^Rational[-1, 2], "ABBBBB" -> 
           583^Rational[-1, 2]}, VertexStyle -> {
           RGBColor[1, 0, 0]}, VertexWeight -> {12, 10, 4, 12, 9, 9, 4, 1}}]],
       Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         RGBColor[1, 0, 0], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.9406239776398064`, 1.2958995863950258`}, 
             0.12736346199245377`], "DynamicName", BoxID -> "VertexID$1"], 
           InsetBox[
            FormBox["12", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.8364404192593762`, 0.6482952817500763}, 
             0.10613621832704481`], "DynamicName", BoxID -> "VertexID$2"], 
           InsetBox[
            FormBox["10", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.7544949698076282, 1.2744662289213973`}, 
             0.04245448733081792], "DynamicName", BoxID -> "VertexID$3"], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            DiskBox[{1.9422360815287751`, 0.}, 0.12736346199245377`], 
            "DynamicName", BoxID -> "VertexID$4"], 
           InsetBox[
            FormBox["12", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.1485771842465324`, 0.9036793148361897}, 
             0.09552259649434032], "DynamicName", BoxID -> "VertexID$5"], 
           InsetBox[
            FormBox["9", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            
            DiskBox[{1.1492421934451176`, 0.3911396070189008}, 
             0.09552259649434032], "DynamicName", BoxID -> "VertexID$6"], 
           InsetBox[
            FormBox["9", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$6"], 
         TagBox[{
           TagBox[
            
            DiskBox[{0.7552668089566603, 0.020929772475809627`}, 
             0.04245448733081792], "DynamicName", BoxID -> "VertexID$7"], 
           InsetBox[
            FormBox["4", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$7"], 
         TagBox[{
           TagBox[
            DiskBox[{0., 0.6469330317068042}, 0.01061362183270448], 
            "DynamicName", BoxID -> "VertexID$8"], 
           InsetBox[
            FormBox["1", TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$8"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.4549285452690035`, 
         180.02470359602603`}, {-75.02470359602646, 64.32592010382072}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "AAAA", "AAABB", "AABAB", "AABBA", "ABAAB", "ABABA", "ABBAA", 
         "AABBBB", "ABABBB", "ABBABB", "ABBBAB", "ABBBBA", "ABBBBBB"}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 3}, {2, 
         4}, {2, 8}, {2, 5}, {2, 6}, {2, 9}, {2, 10}, {3, 4}, {3, 8}, {3, 
         5}, {3, 6}, {3, 9}, {3, 7}, {3, 10}, {3, 11}, {4, 8}, {4, 6}, {4, 
         9}, {4, 7}, {4, 11}, {4, 12}, {8, 9}, {8, 10}, {8, 11}, {8, 12}, {8, 
         13}, {5, 6}, {5, 9}, {5, 7}, {5, 10}, {5, 11}, {6, 9}, {6, 7}, {6, 
         10}, {6, 11}, {6, 12}, {9, 10}, {9, 11}, {9, 12}, {9, 13}, {7, 10}, {
         7, 11}, {7, 12}, {10, 11}, {10, 12}, {10, 13}, {11, 12}, {11, 13}, {
         12, 13}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, GraphLayout -> {"Dimension" -> 2}, 
         PerformanceGoal -> "Quality", VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$0a651e1462ad4237b51d97011f4d7613`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "ABABBB" -> Automatic, 
           "ABAAB" -> Automatic, "AABBBB" -> Automatic, "ABABA" -> Automatic, 
           "ABBABB" -> Automatic, "ABBAA" -> Automatic, "ABBBAB" -> Automatic,
            "AAABB" -> Automatic, "AABBA" -> Automatic, "AAAA" -> Automatic, 
           "AABAB" -> Automatic, "ABBBBBB" -> Automatic, "ABBBBA" -> 
           Automatic}, 
         VertexSize -> {
          "ABBAA" -> 25 1937^Rational[-1, 2], "ABBBBA" -> 
           5 1937^Rational[-1, 2], "AABBA" -> 18 1937^Rational[-1, 2], 
           "AABAB" -> 35 1937^Rational[-1, 2], "AAABB" -> 
           25 1937^Rational[-1, 2], "ABBABB" -> 19 1937^Rational[-1, 2], 
           "ABABBB" -> 14 1937^Rational[-1, 2], "ABBBAB" -> 
           14 1937^Rational[-1, 2], "ABBBBBB" -> 1937^Rational[-1, 2], "AAAA" -> 
           34 1937^Rational[-1, 2], "AABBBB" -> 5 1937^Rational[-1, 2], 
           "ABAAB" -> 42 1937^Rational[-1, 2], "ABABA" -> 
           35 1937^Rational[-1, 2]}, VertexStyle -> {
           RGBColor[1, 0, 0]}, 
         VertexWeight -> {34, 25, 35, 18, 42, 35, 25, 5, 14, 19, 14, 5, 1}}]],
       Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         RGBColor[1, 0, 0], 
         TagBox[
          
          DiskBox[{2.959022802812071, 0.6032830170948971}, 
           0.1429856950607923], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          
          DiskBox[{2.2912011783743873`, 0.9096137470190222}, 
           0.10513654048587669`], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          
          DiskBox[{1.857261658023254, 0.5998941351834136}, 
           0.14719115668022736`], "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          DiskBox[{1.6907640262416048`, 0.}, 0.07569830914983122], 
          "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          
          DiskBox[{2.2313924845840156`, 1.5277838568598094`}, 
           0.17662938801627284`], "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          
          DiskBox[{1.833065501929739, 1.1125124902938877`}, 
           0.14719115668022736`], "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          
          DiskBox[{2.1831721721967914`, 0.27711474452981016`}, 
           0.10513654048587669`], "DynamicName", BoxID -> "VertexID$7"], 
         TagBox[
          
          DiskBox[{0.9220281338346414, 0.12647835959485476`}, 
           0.02102730809717534], "DynamicName", BoxID -> "VertexID$8"], 
         TagBox[
          
          DiskBox[{0.9594220875931236, 1.1686307419927098`}, 
           0.05887646267209094], "DynamicName", BoxID -> "VertexID$9"], 
         TagBox[
          
          DiskBox[{1.304144948236232, 1.3035253680434278`}, 
           0.07990377076926629], "DynamicName", BoxID -> "VertexID$10"], 
         TagBox[
          
          DiskBox[{1.1780617326314382`, 0.6784849170396672}, 
           0.05887646267209094], "DynamicName", BoxID -> "VertexID$11"], 
         TagBox[
          
          DiskBox[{0.6439969143318081, 0.49589876282574663`}, 
           0.02102730809717534], "DynamicName", BoxID -> "VertexID$12"], 
         TagBox[
          DiskBox[{0., 0.9812004423359914}, 0.004205461619435067], 
          "DynamicName", BoxID -> "VertexID$13"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.58, 176.42000000000004`}, {-53.56320000000001, 
         46.91500318656044}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], 
   StyleBox[",", "Text",
    FontColor->GrayLevel[0.3]], 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "AAAAB", "AAABA", "AAABBB", "AABAA", "AABABB", "AABBAB", "ABAAA", 
         "ABAABB", "ABABAB", "ABBAAB", "AABBBA", "ABABBA", "ABBABA", 
         "AABBBBB", "ABABBBB", "ABBABBB", "ABBBAA", "ABBBABB", "ABBBBAB", 
         "ABBBBBA", "ABBBBBBB"}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8}, {1, 
         9}, {1, 10}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 11}, {2, 7}, {2, 
         8}, {2, 9}, {2, 12}, {2, 13}, {3, 5}, {3, 6}, {3, 11}, {3, 14}, {3, 
         8}, {3, 9}, {3, 12}, {3, 15}, {3, 16}, {4, 5}, {4, 6}, {4, 11}, {4, 
         7}, {4, 9}, {4, 12}, {4, 10}, {4, 13}, {4, 17}, {5, 6}, {5, 11}, {5, 
         14}, {5, 8}, {5, 9}, {5, 15}, {5, 10}, {5, 13}, {5, 16}, {5, 18}, {6,
          11}, {6, 14}, {6, 9}, {6, 12}, {6, 15}, {6, 10}, {6, 17}, {6, 18}, {
         6, 19}, {11, 14}, {11, 12}, {11, 15}, {11, 13}, {11, 17}, {11, 19}, {
         11, 20}, {14, 15}, {14, 16}, {14, 18}, {14, 19}, {14, 20}, {14, 
         21}, {7, 8}, {7, 9}, {7, 12}, {7, 10}, {7, 13}, {7, 17}, {8, 9}, {8, 
         12}, {8, 15}, {8, 10}, {8, 13}, {8, 16}, {8, 18}, {9, 12}, {9, 15}, {
         9, 10}, {9, 13}, {9, 16}, {9, 17}, {9, 18}, {9, 19}, {12, 15}, {12, 
         13}, {12, 16}, {12, 17}, {12, 19}, {12, 20}, {15, 16}, {15, 18}, {15,
          19}, {15, 20}, {15, 21}, {10, 13}, {10, 16}, {10, 17}, {10, 18}, {
         10, 19}, {13, 16}, {13, 17}, {13, 18}, {13, 19}, {13, 20}, {16, 
         18}, {16, 19}, {16, 20}, {16, 21}, {17, 18}, {17, 19}, {17, 20}, {18,
          19}, {18, 20}, {18, 21}, {19, 20}, {19, 21}, {20, 21}}}, {EdgeStyle -> {
           Hue[0.89, 0.97, 0.71]}, GraphLayout -> {"Dimension" -> 2}, 
         PerformanceGoal -> "Quality", VertexShapeFunction -> {Text[
            Framed[
             Style[
              
              FunctionRepository`$0a651e1462ad4237b51d97011f4d7613`\
stripMetadata[#2], 
              Hue[0.62, 1, 0.48]], Background -> Directive[
               Opacity[0.2], 
               Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
             RoundingRadius -> 0, FrameStyle -> Directive[
               Opacity[0.5], 
               Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& , "ABBBABB" -> Automatic, 
           "ABAAA" -> Automatic, "AAAAB" -> Automatic, "ABBBBBBB" -> 
           Automatic, "AABAA" -> Automatic, "AABBAB" -> Automatic, "AAABBB" -> 
           Automatic, "ABBABBB" -> Automatic, "AABBBBB" -> Automatic, 
           "ABAABB" -> Automatic, "ABBAAB" -> Automatic, "ABABAB" -> 
           Automatic, "ABBBBAB" -> Automatic, "AABABB" -> Automatic, 
           "ABBBBBA" -> Automatic, "ABABBBB" -> Automatic, "ABBBAA" -> 
           Automatic, "AABBBA" -> Automatic, "AAABA" -> Automatic, "ABABBA" -> 
           Automatic, "ABBABA" -> Automatic}, 
         VertexSize -> {
          "ABBBBBA" -> 2 Rational[3, 4963]^Rational[1, 2], "ABBBAA" -> 
           44 14889^Rational[-1, 2], "AABAA" -> 
           16 Rational[7, 2127]^Rational[1, 2], "AABBBBB" -> 
           2 Rational[3, 4963]^Rational[1, 2], "ABABBA" -> 
           24 Rational[3, 4963]^Rational[1, 2], "ABBABA" -> 
           4 Rational[21, 709]^Rational[1, 2], "ABABAB" -> 
           20 Rational[7, 2127]^Rational[1, 2], "AABABB" -> 
           4 Rational[21, 709]^Rational[1, 2], "AAABA" -> 
           16 Rational[7, 2127]^Rational[1, 2], "ABABBBB" -> 
           20 14889^Rational[-1, 2], "ABAABB" -> 100 14889^Rational[-1, 2], 
           "ABBBBBBB" -> 14889^Rational[-1, 2], "ABBABBB" -> 
           34 14889^Rational[-1, 2], "AAABBB" -> 44 14889^Rational[-1, 2], 
           "ABBBABB" -> 34 14889^Rational[-1, 2], "AAAAB" -> 
           136 14889^Rational[-1, 2], "AABBBA" -> 
           4 Rational[7, 2127]^Rational[1, 2], "ABAAA" -> 
           136 14889^Rational[-1, 2], "AABBAB" -> 
           24 Rational[3, 4963]^Rational[1, 2], "ABBAAB" -> 
           100 14889^Rational[-1, 2], "ABBBBAB" -> 20 14889^Rational[-1, 2]}, 
         VertexStyle -> {
           RGBColor[1, 0, 0]}, 
         VertexWeight -> {136, 112, 44, 112, 84, 72, 136, 100, 140, 100, 28, 
          72, 84, 6, 20, 34, 44, 34, 20, 6, 1}}]], Typeset`boxes, 
      Typeset`boxes$s2d = GraphicsGroupBox[{{
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         Hue[0.89, 0.97, 0.71], 
         LineBox[{{
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$1", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$3", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$4", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$2", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$14", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$3", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$7", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$4", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$14", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$5", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$11", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$14", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$7", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$9", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$8", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$9", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$10", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$14", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$11", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$13", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$13", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$13", Automatic, Center], 
            DynamicLocation["VertexID$17", Automatic, Center]}, {
            DynamicLocation["VertexID$13", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$13", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$13", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$14", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}, {
            DynamicLocation["VertexID$14", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$14", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$14", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$14", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$14", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}, {
            DynamicLocation["VertexID$15", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}, {
            DynamicLocation["VertexID$15", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$15", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$15", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$15", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}, {
            DynamicLocation["VertexID$16", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$16", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$16", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$16", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}, {
            DynamicLocation["VertexID$17", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}, {
            DynamicLocation["VertexID$17", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$17", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$18", Automatic, Center], 
            DynamicLocation["VertexID$19", Automatic, Center]}, {
            DynamicLocation["VertexID$18", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$18", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}, {
            DynamicLocation["VertexID$19", Automatic, Center], 
            DynamicLocation["VertexID$20", Automatic, Center]}, {
            DynamicLocation["VertexID$19", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}, {
            DynamicLocation["VertexID$20", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}}]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         RGBColor[1, 0, 0], 
         TagBox[
          
          DiskBox[{3.1563398159066445`, 0.4487888604605266}, 
           0.20931893595214207`], "DynamicName", BoxID -> "VertexID$1"], 
         TagBox[
          
          DiskBox[{2.864844473143166, 0.7685583028478338}, 
           0.1723803001958817], "DynamicName", BoxID -> "VertexID$2"], 
         TagBox[
          DiskBox[{1.9242625969636296`, 0.}, 0.06772083221981069], 
          "DynamicName", BoxID -> "VertexID$3"], 
         TagBox[
          
          DiskBox[{2.886567397996278, 1.3249751051157532`}, 
           0.1723803001958817], "DynamicName", BoxID -> "VertexID$4"], 
         TagBox[
          
          DiskBox[{2.0448894606502757`, 0.41505794060809764`}, 
           0.1292852251469113], "DynamicName", BoxID -> "VertexID$5"], 
         TagBox[
          
          DiskBox[{1.926002376101182, 0.7856772378286321}, 
           0.1108159072687811], "DynamicName", BoxID -> "VertexID$6"], 
         TagBox[
          
          DiskBox[{3.109213468948512, 1.709776029119407}, 
           0.20931893595214207`], "DynamicName", BoxID -> "VertexID$7"], 
         TagBox[
          
          DiskBox[{2.4223593917443944`, 0.6249221020449469}, 
           0.15391098231775155`], "DynamicName", BoxID -> "VertexID$8"], 
         TagBox[
          
          DiskBox[{2.2681901388730834`, 1.096566251425518}, 
           0.21547537524485216`], "DynamicName", BoxID -> "VertexID$9"], 
         TagBox[
          
          DiskBox[{2.4352582803192657`, 1.5660069715760243`}, 
           0.15391098231775155`], "DynamicName", BoxID -> "VertexID$10"], 
         TagBox[
          
          DiskBox[{1.5949398439939002`, 1.0421338912039293`}, 
           0.04309507504897043], "DynamicName", BoxID -> "VertexID$11"], 
         TagBox[
          
          DiskBox[{1.9037914516809789`, 1.3471386602600952`}, 
           0.1108159072687811], "DynamicName", BoxID -> "VertexID$12"], 
         TagBox[
          
          DiskBox[{2.000860011216243, 1.7099849971585355`}, 
           0.1292852251469113], "DynamicName", BoxID -> "VertexID$13"], 
         TagBox[
          
          DiskBox[{0.6869586328988024, 0.4759597285969954}, 
           0.009234658939065091], "DynamicName", BoxID -> "VertexID$14"], 
         TagBox[
          
          DiskBox[{1.1561278112471465`, 0.4808159978045061}, 
           0.030782196463550307`], "DynamicName", BoxID -> "VertexID$15"], 
         TagBox[
          
          DiskBox[{1.2063451917449308`, 0.8718153616080834}, 
           0.05232973398803552], "DynamicName", BoxID -> "VertexID$16"], 
         TagBox[
          
          DiskBox[{1.9055340941966874`, 2.126113386750031}, 
           0.06772083221981069], "DynamicName", BoxID -> "VertexID$17"], 
         TagBox[
          
          DiskBox[{1.2185340446227062`, 1.2974321500146615`}, 
           0.05232973398803552], "DynamicName", BoxID -> "VertexID$18"], 
         TagBox[
          
          DiskBox[{1.1029160354693501`, 1.6550072442996622`}, 
           0.030782196463550307`], "DynamicName", BoxID -> "VertexID$19"], 
         TagBox[
          DiskBox[{0.6602299209910205, 1.6012053755074889`}, 
           0.009234658939065091], "DynamicName", BoxID -> "VertexID$20"], 
         TagBox[
          DiskBox[{0., 1.0488815576713875`}, 0.0015391098231775154`], 
          "DynamicName", BoxID -> "VertexID$21"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        
        ImageSizeCache->{{2.58, 176.42}, {-62.56320000000001, 
         54.85194219253681}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None]}], 
  StyleBox["}",
   FontColor->None]}]], "Output",
 CellChangeTimes->{3.792765791901773*^9}]
}, {2}]],

Cell["", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791221924004776*^9, {3.793222596071529*^9, 
   3.793222600780607*^9}, {3.793222663080153*^9, 3.7932227497023478`*^9}, {
   3.7932974152084084`*^9, 3.793297425870569*^9}},
 CellID->1777206076],

Cell["\<\
Let us say that we want to track what happens to some part of this branchlike \
hypersurface. Each state undergoes updating events that are represented by \
edges in the multiway graph. And in general the paths followed in the \
multiway graph can be thought of as geodesics in multiway space. And to \
determine what happens to some part of the branchlike hypersurface, we must \
then follow a bundle of geodesics.\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791221924004776*^9, {3.793222596071529*^9, 
   3.793222600780607*^9}, {3.793222663080153*^9, 3.7932227497023478`*^9}, {
   3.7932974152084084`*^9, 3.793297425870569*^9}, 3.794233928996994*^9, 
   3.794270261556003*^9, {3.7953766485383244`*^9, 3.795376649852222*^9}},
 CellID->152473209],

Cell[TextData[{
 "A notable feature of the multiway graph is the presence of branching and \
merging, and this will cause our bundle of geodesics to diverge and converge. \
Often in standard quantum formalism we are interested in the projection of \
one quantum state on another ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", " ", 
    RowBox[{"|", " ", ">"}]}], TraditionalForm]]],
 ". In our setup, the only truly meaningful computation is of the propagation \
of a geodesic bundle. But as an approximation to this that should be \
satisfactory in an appropriate limit, we can use distance between states in \
multiway space, and computing this in terms of the vectors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["t", "i"], ",", " ", 
      SubsuperscriptBox["b", "i", ">"]}], ")"}]}], TraditionalForm]]],
 " the expected Hilbert space norm [",
 ButtonBox["122",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/references/\
index.html#vNQM"], None}],
 "][",
 ButtonBox["123",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/references/\
index.html#vN2"], None}],
 "] appears: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Xi]", "1"], " ", "\[Dash]", " ", 
        SubscriptBox["\[Xi]", "2"]}], ")"}], "2"], " ", "=", " ", 
     RowBox[{
      SubsuperscriptBox["\[Xi]", "1", "2"], " ", "+", " ", 
      SubsuperscriptBox["\[Xi]", "2", "2"]}]}], " ", "\[Dash]", " ", 
    RowBox[{"2", 
     RowBox[{
      SubscriptBox["\[Xi]", "1"], ".", 
      SubscriptBox["\[Xi]", "2"]}]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791221924004776*^9, {3.793222596071529*^9, 
   3.793222600780607*^9}, {3.793222663080153*^9, 3.7932227497023478`*^9}, {
   3.7932974152084084`*^9, 3.793297425870569*^9}, 3.794233962808098*^9, {
   3.794234011993677*^9, 3.794234033189369*^9}, {3.7950926252137737`*^9, 
   3.795092640000618*^9}, {3.795102510294181*^9, 3.795102510446727*^9}, {
   3.7953766506926928`*^9, 3.7953766533405313`*^9}},
 CellTags->{"FirstCellOnPage", "p-440"},
 CellID->669232792],

Cell[TextData[{
 "Time evolution in our system is effectively the propagation of geodesics \
through the multiway graph. And to work out a transition amplitude ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", "i"}], " ", "|", " ", "S", " ", "|", " ", 
    RowBox[{"f", ">"}]}], TraditionalForm]]],
 " between initial and final states we need to see what happens to a bundle \
of geodesics that correspond to the initial state as they propagate through \
the multiway graph. And in particular we want to know the measure (or \
essentially cross-sectional area) of the geodesic bundle when it intersects \
the branchlike hypersurface defined by a certain quantum observation frame to \
detect the final state."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791221924004776*^9, {3.793222596071529*^9, 
   3.793222600780607*^9}, {3.793222663080153*^9, 3.7932227497023478`*^9}, {
   3.7932974152084084`*^9, 3.793297425870569*^9}, 3.794234079796071*^9, {
   3.7951349089685173`*^9, 3.795134931265635*^9}, {3.7953766558906717`*^9, 
   3.795376656438738*^9}},
 CellID->1423675805],

Cell["\<\
To analyze this, consider a single path in the multiway system, corresponding \
to a single geodesic. The critical observation is that this path is \
effectively \[OpenCurlyDoubleQuote]turned\[CloseCurlyDoubleQuote] in multiway \
space every time a branching event occurs, essentially just like in the \
simple example below:\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791221924004776*^9, {3.793222596071529*^9, 
   3.793222600780607*^9}, {3.793222663080153*^9, 3.7932227497023478`*^9}, {
   3.7932974152084084`*^9, 3.793297425870569*^9}, 3.795376657787942*^9},
 CellID->456459761],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<MultiwaySystem\>\"", "]"}], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<A\>\"", "\[Rule]", "\"\<AB\>\""}], ",", 
       RowBox[{"\"\<B\>\"", "\[Rule]", "\"\<A\>\""}]}], "}"}], ",", 
     RowBox[{"{", "\"\<A\>\"", "}"}], ",", "5", ",", "\"\<StatesGraph\>\""}], 
    "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"DirectedGraph", "[", 
      RowBox[{"PathGraph", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<AB\>\"", ",", "\"\<AA\>\"", ",", "\"\<AAB\>\"", ",", 
         "\"\<AAA\>\"", ",", "\"\<ABAA\>\""}], "}"}], "]"}], "]"}], ",", 
     "Red"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792861251498002*^9, 3.79286125151756*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "A", "AB", "AA", "ABB", "AAB", "ABA", "ABBB", "AAA", "AABB", "ABAB", 
       "ABBA", "ABBBB", "AAAB", "AABA", "AABBB", "ABAA", "ABABB", "ABBAB", 
       "ABBBA", "ABBBBB"}, {{{1, 2}, {2, 3}, {2, 4}, {3, 5}, {4, 5}, {3, 6}, {
       4, 6}, {4, 7}, {5, 8}, {6, 8}, {5, 9}, {7, 9}, {5, 10}, {6, 10}, {7, 
       10}, {6, 11}, {7, 11}, {7, 12}, {8, 13}, {9, 13}, {10, 13}, {8, 14}, {
       9, 14}, {11, 14}, {9, 15}, {12, 15}, {8, 16}, {10, 16}, {11, 16}, {9, 
       17}, {10, 17}, {12, 17}, {10, 18}, {11, 18}, {12, 18}, {11, 19}, {12, 
       19}, {12, 20}}, Null}, {EdgeStyle -> {
         Directive[{
           Hue[0.75, 0, 0.35], 
           Dashing[None], 
           AbsoluteThickness[1]}]}, GraphHighlight -> {"AAB", "ABAA", 
         DirectedEdge["AAA", "ABAA"], 
         DirectedEdge["AA", "AAB"], 
         DirectedEdge["AAB", "AAA"], "AAA", "AB", "AA", 
         DirectedEdge["AB", "AA"]}, 
       GraphHighlightStyle -> {DirectedEdge["AAA", "ABAA"] -> {EdgeStyle -> {
             RGBColor[1, 0, 0]}}, "AAA" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, "ABAA" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, DirectedEdge["AAB", "AAA"] -> {EdgeStyle -> {
             RGBColor[1, 0, 0]}}, "AAB" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, "AA" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}, 
         DirectedEdge["AA", "AAB"] -> {EdgeStyle -> {
             RGBColor[1, 0, 0]}}, DirectedEdge["AB", "AA"] -> {EdgeStyle -> {
             RGBColor[1, 0, 0]}}, "AB" -> {VertexStyle -> {
             RGBColor[1, 0, 0]}}}, PerformanceGoal -> "Quality", 
       VertexShapeFunction -> {Text[
          Framed[
           Style[
            
            FunctionRepository`$8f6303ecbf104a1d80e15d006ea83f97`\
stripMetadata[#2], 
            Hue[0.62, 1, 0.48]], Background -> Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]]], #, {0, 0}]& }}]], Typeset`boxes, 
    Typeset`boxes$s2d = GraphicsGroupBox[{{
       Arrowheads[Medium], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       Directive[{
         Hue[0.75, 0, 0.35], 
         Dashing[None], 
         AbsoluteThickness[1]}], 
       ArrowBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$2", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], {{
          RGBColor[1, 0, 0]}}, StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$3", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], {{
          RGBColor[1, 0, 0]}}, StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], {{
          RGBColor[1, 0, 0]}}, StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$16", Automatic, Center]}], {{
          RGBColor[1, 0, 0]}}, StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$17", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$18", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$19", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$20", Automatic, Center]}]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"A\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 5.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        StyleBox[
         InsetBox[
          FormBox[
           FrameBox[
            StyleBox["\"AB\"", 
             Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
            Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
           TraditionalForm], {0., 4.}, 
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}]], {{
           RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$2"], 
       TagBox[
        StyleBox[
         InsetBox[
          FormBox[
           FrameBox[
            StyleBox["\"AA\"", 
             Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
            Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
           TraditionalForm], {-1., 3.}, 
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}]], {{
           RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$3"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 3.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        StyleBox[
         InsetBox[
          FormBox[
           FrameBox[
            StyleBox["\"AAB\"", 
             Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
            Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
           TraditionalForm], {-1., 2.}, 
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}]], {{
           RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$5"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 2.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        StyleBox[
         InsetBox[
          FormBox[
           FrameBox[
            StyleBox["\"AAA\"", 
             Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
            Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
           TraditionalForm], {-2., 1.}, 
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}]], {{
           RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$8"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AABB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 1.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AAAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AABA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {-2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"AABBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {1., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        StyleBox[
         InsetBox[
          FormBox[
           FrameBox[
            StyleBox["\"ABAA\"", 
             Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
            Directive[
              Opacity[0.2], 
              Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
            RoundingRadius -> 0, FrameStyle -> Directive[
              Opacity[0.5], 
              Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
           TraditionalForm], {-1., 0.}, 
          ImageScaled[{
            Rational[1, 2], 
            Rational[1, 2]}]], {{
           RGBColor[1, 0, 0]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$16"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABABB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {0., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBAB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {2., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$18"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBBA\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {3., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> "VertexID$19"], 
       TagBox[
        InsetBox[
         FormBox[
          FrameBox[
           StyleBox["\"ABBBBB\"", 
            Hue[0.62, 1, 0.48], StripOnInput -> False], Background -> 
           Directive[
             Opacity[0.2], 
             Hue[0.62, 0.45, 0.87]], FrameMargins -> {{2, 2}, {0, 0}}, 
           RoundingRadius -> 0, FrameStyle -> Directive[
             Opacity[0.5], 
             Hue[0.62, 0.52, 0.82]], StripOnInput -> False], 
          TraditionalForm], {4., 0.}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], "DynamicName", BoxID -> 
        "VertexID$20"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0., 359.}, {-127.99999999999999`, 119.5714285714286}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{360., Automatic}]], "Output",
 CellChangeTimes->{3.79286125370295*^9, 3.793660989687924*^9}]
}, {2}]],

Cell[TextData[{
 "If we think of the turns as being through an angle ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " , the way the trajectory projects onto the final branchlike hypersurface \
can then be represented by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"i", " ", "\[Theta]"}]], TraditionalForm]]],
 ". But to work out the angle ",
 Cell[BoxData[
  FormBox["\[Theta]", TraditionalForm]]],
 " for a given path, we need to know how much branching there will be in the \
region of the multiway graph through which it passes."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, {
   3.794234156692346*^9, 3.794234184646041*^9}, 3.795376659812257*^9},
 CellID->907616043],

Cell["\<\
But now recall that in discussing spacetime we identified the flux of edges \
through spacelike hypersurfaces in the causal graph as potentially \
corresponding to energy. The spacetime causal graph, however, is just a \
projection of the full multiway causal graph, in which branchlike directions \
have been reduced out. (In a causal invariant system, it does not matter what \
\[OpenCurlyDoubleQuote]direction\[CloseCurlyDoubleQuote] this projection is \
done in; the reduced causal graph is always the same.) But now suppose that \
in the full multiway causal graph, the flux of edges across spacelike \
hypersurfaces can still be considered to correspond to energy.\
\>", "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, {
   3.794234206449175*^9, 3.7942342369019136`*^9}, {3.7953766610675*^9, 
   3.7953766626971073`*^9}},
 CellID->726490060],

Cell[TextData[{
 "Now note that every node in the multiway causal graph represents some event \
in the multiway graph. But events are what produce branching\[LongDash]and \
\[OpenCurlyDoubleQuote]turns\[CloseCurlyDoubleQuote]\[LongDash]of paths in \
the multiway graph. So what this suggests is that the amount of turning of a \
path in the multiway graph should be proportional to energy, multiplied by \
the number of steps, or effectively the time. In standard quantum formalism, \
energy is identified with the Hamiltonian ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 ", so what this says is that in our models, we can expect transition \
amplitudes to have the basic form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"i", " ", "H", " ", "t"}]], TraditionalForm]]],
 "\[LongDash]in agreement with the result from quantum mechanics."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, {
   3.794234258915794*^9, 3.794234273944008*^9}, {3.794234312960082*^9, 
   3.7942343170842953`*^9}, {3.795376663617749*^9, 3.795376666848118*^9}},
 CellTags->{"FirstCellOnPage", "p-441"},
 CellID->1673905225],

Cell[TextData[{
 "To think about this in more detail, we need not just a single energy \
quantity\[LongDash]corresponding to an overall rate of events\[LongDash]but \
rather we want a local measure of event rate as a function of location in \
multiway space. In addition, if we want to compute in a relativistically \
invariant way, we do not just want the flux of causal edges through spacelike \
hypersurfaces in some specific foliation. But now we can make a potential \
identification with standard quantum formalism: we suppose that the ",
 ButtonBox["Lagrangian density",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Lagrangian_(field_theory)"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Lagrangian_(field_theory)"],
 " ",
 Cell[BoxData[
  FormBox["\[ScriptCapitalL]", TraditionalForm]]],
 " corresponds to the total flux in all directions (or, in other words, the \
divergence) of causal edges at each point in multiway space."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, 
   3.794234389540601*^9, {3.795376667639016*^9, 3.795376669396368*^9}},
 CellID->1289340875],

Cell[TextData[{
 "But now consider a path in the multiway system going through multiway \
space. To know how much \
\[OpenCurlyDoubleQuote]turning\[CloseCurlyDoubleQuote] to expect in the path, \
we need in effect to integrate the Lagrangian density along the path \
(together with the appropriate volume element). And this will give us \
something of the form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"i", " ", "S"}]], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 " is the action. But this is exactly what we see in the standard ",
 ButtonBox["path integral formulation of quantum mechanics",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://ncatlab.org/nlab/show/path+integral"], None},
  ButtonNote->"https://ncatlab.org/nlab/show/path+integral"],
 " [",
 ButtonBox["124",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/references/\
index.html#FeynmanHibbs"], None}],
 "]."
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, {
   3.7942346942606487`*^9, 3.7942346960938*^9}, {3.794234836626936*^9, 
   3.794234863526123*^9}, 3.795102510644602*^9, {3.795376670307661*^9, 
   3.7953766714084463`*^9}},
 CellID->1842087895],

Cell[TextData[{
 "There are many additional details (see [",
 ButtonBox["121",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/references/\
index.html#JGQM"], None}],
 "]). But the correspondence between our models and the results of standard \
quantum formalism is notable. "
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, 
   3.795102510797702*^9, {3.7953766720892143`*^9, 3.795376672639358*^9}},
 CellID->1846996113],

Cell[TextData[{
 "It is worth pointing out that in our models, something like the Lagrangian \
is ultimately not something that is just inserted from the outside; instead \
it must emerge from actual rules operating on hypergraphs. In the standard \
formalism of quantum field theory, the Lagrangian is stated in terms of \
quantum field operators. And the implication is therefore that the structure \
of the Lagrangian must somehow emerge as a kind of limit of the underlying \
discrete system, perhaps a bit like how ",
 ButtonBox["fluid mechanics can emerge from discrete underlying molecular \
dynamics",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.stephenwolfram.com/publications/academic/cellular-\
automaton-fluids-theory.pdf"], None},
  ButtonNote->
   "https://www.stephenwolfram.com/publications/academic/cellular-automaton-\
fluids-theory.pdf"],
 " (or cellular automata) [",
 ButtonBox["110",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframphysics.org/technical-introduction/references/\
index.html#SW-CAF"], None}],
 "]. "
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, 
   3.794236246830256*^9, 3.7942363320789948`*^9, 3.7942702765271378`*^9, 
   3.7951025109943733`*^9, {3.795376673160672*^9, 3.795376673939765*^9}},
 CellID->587553806],

Cell[TextData[{
 "One notable feature of standard quantum formalism is the appearance of \
complex numbers for amplitudes. Here the core concept is the turning of a \
path in multiway space; the complex numbers arise only as a convenient way to \
represent the path and understand its projections. But there is an additional \
way complex numbers can arise. Imagine that we want to put a metric on the \
full ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", ",", " ", 
     OverscriptBox["x", "\[RightVector]"], ",", " ", 
     OverscriptBox["b", 
      StyleBox[
       AdjustmentBox["<",
        BoxBaselineShift->0.2],
       FontSize->-4 + Inherited],
      DiacriticalPositioning->True]}], ")"}], TraditionalForm]]],
 " space of the multiway causal graph. The normal convention for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", ",", " ", 
     OverscriptBox["x", "\[RightVector]"]}], ")"}], TraditionalForm]]],
 " space is to have real-number coordinates and a norm based on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["t", "2"], " ", "\[Dash]", " ", 
    SuperscriptBox["x", "2"]}], TraditionalForm]]],
 "\[LongDash]but an alternative is use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", " ", "t"}], TraditionalForm]]],
 " for time. In extending to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", ",", " ", 
     OverscriptBox["x", "\[RightVector]"], ",", " ", 
     OverscriptBox["b", 
      StyleBox[
       AdjustmentBox["<",
        BoxBaselineShift->0.2],
       FontSize->-4 + Inherited],
      DiacriticalPositioning->True]}], ")"}], TraditionalForm]]],
 " space, one might imagine that a natural norm which allows the \
contributions of ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " components to be appropriately distinguished would be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["t", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", "+", " ", 
     RowBox[{"i", " ", 
      SuperscriptBox["b", "2"]}]}]}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.7902189766142883`*^9, 3.790219549305064*^9}, {
   3.79021959480539*^9, 3.790219933202067*^9}, {3.790219981934992*^9, 
   3.790219984158449*^9}, {3.7902200211000843`*^9, 3.790220127388528*^9}, {
   3.7902201677757607`*^9, 3.7902202296261587`*^9}, {3.790220277837832*^9, 
   3.790220338857126*^9}, {3.790220374974728*^9, 3.790220431188631*^9}, {
   3.7903028915431023`*^9, 3.790302891686862*^9}, {3.790303069992332*^9, 
   3.790303334155139*^9}, {3.7903033709623423`*^9, 3.790303414540051*^9}, {
   3.790303477236719*^9, 3.790303527930028*^9}, {3.790303562525982*^9, 
   3.790303563295012*^9}, {3.790303615345313*^9, 3.790303629369705*^9}, {
   3.790303674613329*^9, 3.790303736376466*^9}, {3.790303767016405*^9, 
   3.7903037974596167`*^9}, {3.790303828721341*^9, 3.7903038317948627`*^9}, {
   3.790303873804908*^9, 3.790303911474478*^9}, {3.790303942344782*^9, 
   3.790304108227538*^9}, {3.790304146744709*^9, 3.790304500843012*^9}, {
   3.7903045454954367`*^9, 3.7903046334242268`*^9}, {3.7903047292320557`*^9, 
   3.790304762055243*^9}, {3.79030482021064*^9, 3.79030519643701*^9}, {
   3.790305237521144*^9, 3.79030527338586*^9}, {3.790305326195301*^9, 
   3.7903053339373703`*^9}, {3.7903053912135763`*^9, 3.7903055719976*^9}, {
   3.790305647671639*^9, 3.7903056927490587`*^9}, {3.790305739368465*^9, 
   3.790305739497471*^9}, {3.790305835226001*^9, 3.790305851232285*^9}, {
   3.7903059248031397`*^9, 3.790306015379084*^9}, {3.7903060897739267`*^9, 
   3.7903061348505497`*^9}, {3.7903061935243607`*^9, 3.790306195838148*^9}, {
   3.790306233296283*^9, 3.790306271143029*^9}, {3.7903064642856073`*^9, 
   3.790306486709647*^9}, {3.790306557624362*^9, 3.790306579310343*^9}, {
   3.7903066968293133`*^9, 3.7903067270582*^9}, {3.790306770320552*^9, 
   3.790306786893146*^9}, {3.7903068210649776`*^9, 3.7903074154430532`*^9}, {
   3.790307454927471*^9, 3.790307521024523*^9}, {3.7903075519984922`*^9, 
   3.790307625138007*^9}, {3.790307673366452*^9, 3.790308096466256*^9}, {
   3.79030813282796*^9, 3.790308186831174*^9}, {3.79030821886064*^9, 
   3.790308492304587*^9}, {3.790308536156208*^9, 3.790309541314549*^9}, {
   3.7903095778619337`*^9, 3.7903097125538807`*^9}, 3.7903097501433907`*^9, {
   3.790309780789082*^9, 3.7903098365857773`*^9}, {3.790309882452301*^9, 
   3.790310139387884*^9}, {3.790310171797557*^9, 3.790310431884791*^9}, {
   3.7903105282325068`*^9, 3.790310758327339*^9}, {3.790310794106203*^9, 
   3.7903108885478373`*^9}, {3.790379385710821*^9, 3.790379386181961*^9}, {
   3.790379479126892*^9, 3.79037961359551*^9}, {3.7903796444822073`*^9, 
   3.790379796125019*^9}, {3.7903798298626833`*^9, 3.790379962578052*^9}, {
   3.790379998199485*^9, 3.79038015050711*^9}, {3.79038018371349*^9, 
   3.790380233006369*^9}, {3.7903802682014103`*^9, 3.7903803805847816`*^9}, {
   3.790380412718274*^9, 3.790380579929797*^9}, {3.790380628500864*^9, 
   3.79038069400807*^9}, {3.790380730188559*^9, 3.790380756841736*^9}, {
   3.790380793634865*^9, 3.790381102909793*^9}, {3.79038116069799*^9, 
   3.790381242194736*^9}, {3.7903812763371563`*^9, 3.79038127675231*^9}, {
   3.790381310588634*^9, 3.790381520093857*^9}, {3.790381555987525*^9, 
   3.790381773770138*^9}, {3.790381821038292*^9, 3.790382379913341*^9}, {
   3.790382436934216*^9, 3.7903824881453447`*^9}, {3.790382548773201*^9, 
   3.790382642589712*^9}, {3.790382714064292*^9, 3.790382791601253*^9}, {
   3.79038284460573*^9, 3.7903829952099752`*^9}, 3.790383065006699*^9, {
   3.790383106887829*^9, 3.7903831970004597`*^9}, 3.79038333746143*^9, {
   3.7903833975227327`*^9, 3.790383730356379*^9}, {3.790383761922967*^9, 
   3.790383843133463*^9}, 3.791222045656192*^9, {3.793222852664535*^9, 
   3.7932228614786663`*^9}, {3.793222903281254*^9, 3.79322298341604*^9}, {
   3.793297592163669*^9, 3.793297597570035*^9}, {3.793297714382799*^9, 
   3.7932977143835697`*^9}, {3.79329778691031*^9, 3.793297799964233*^9}, {
   3.7942358277057753`*^9, 3.79423588064188*^9}, {3.794236199739436*^9, 
   3.7942362010205517`*^9}, 3.7942365742741537`*^9, 3.79423678375327*^9, {
   3.794236844558353*^9, 3.794236915200017*^9}, {3.7942702951225653`*^9, 
   3.794270305112472*^9}, {3.794342476191967*^9, 3.794342482887177*^9}, {
   3.795376674942601*^9, 3.7953766858479557`*^9}},
 CellID->887008536]
}, Open  ]]
},
Saveable->False,
WindowSize->{815, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Quantum Formalism \[Dash] from the Wolfram Physics Project \
Technical Background",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{
      StyleBox[
      "\"Wolfram Physics Project\"", 18, FontColor -> GrayLevel[1], 
       StripOnInput -> False], "https://www.wolframphysics.org/"}, 
     "HyperlinkURL"]], "Text", FontFamily -> "Source Sans Pro", 
   ShowCellBracket -> False, CellFrame -> {{0, 0}, {3, 0}}, Selectable -> 
   False, CellFrameColor -> RGBColor[0.737255, 0.752941, 0.901961], 
   CellMargins -> {{0, 0}, {0, -1}}, CellFrameMargins -> {{27, 0}, {8, 10}}, 
   Background -> RGBColor[0.054902, 0.133333, 0.329412], CellTags -> 
   "DockedCellLogoCell", ShowStringCharacters -> False, Deployed -> True], 
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        TemplateBox[{
          StyleBox[
          "\"Technical Introduction\"", FontColor -> 
           RGBColor[0.054902, 0.133333, 0.329412], StripOnInput -> False], 
          "https://www.wolframphysics.org/technical-introduction/"}, 
         "HyperlinkURL"], 
        StyleBox[
        "\"\[RightPointer]\"", 14, FontColor -> 
         RGBColor[0.478431, 0.509804, 0.580392], StripOnInput -> False], 
        TemplateBox[{
          StyleBox[
          "\"Potential Relation to Physics\"", FontColor -> 
           RGBColor[0.054902, 0.133333, 0.329412], StripOnInput -> False], 
          "https://www.wolframphysics.org/technical-introduction/potential-\
relation-to-physics"}, "HyperlinkURL"], 
        StyleBox[
        "\"\[RightPointer]\"", 14, FontColor -> 
         RGBColor[0.478431, 0.509804, 0.580392], StripOnInput -> False]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", FontFamily -> "Source Sans Pro", CellFrame -> {{0, 0}, {1, 0}}, 
   ShowCellBracket -> False, CellMargins -> {{0, 0}, {-1, -1}}, 
   CellFrameMargins -> {{27, 0}, {2, 2}}, CellFrameColor -> 
   RGBColor[0.737255, 0.752941, 0.901961], FontSize -> 12, Background -> 
   RGBColor[0.933333, 0.941176, 0.956863], CellTags -> 
   "DockedCellBreadcrumbCell", ShowStringCharacters -> False, Deployed -> 
   True]},
ShowCellTags->False,
ShowAutoSpellCheck->False,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 13, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "Style Environments", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9}], 
      Cell[
       StyleData[All, "Working"], CellInsertionPointCell -> 
       FEPrivate`FrontEndResource["FEExpressions", "CellInsertionMenu"], 
       CreateCellID -> True, ShowPredictiveInterface -> False, 
       AutoStyleOptions -> {
        "UndefinedSymbolStyle" -> 
         None}, $CellContext`GhostCellInEmptyNotebook -> False], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {536, 698}, "PrintRegistrationMarks" -> True}, 
       AutoStyleOptions -> {"UndefinedSymbolStyle" -> None}, Magnification -> 
       0.6]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Headers and Footers", "Section"], 
      Cell[
       StyleData["Header"], StyleMenuListing -> None, FontFamily -> 
       "Source Sans Pro", FontSize -> 8, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0.45]], 
      Cell[
       StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", FontSize -> 
       8, FontWeight -> "Bold", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Physics Book", "Section", 
       CellChangeTimes -> {{3.646611660445352*^9, 3.646611669493331*^9}, {
        3.793627324833644*^9, 3.793627329937183*^9}}], 
      Cell[
       StyleData["Notebook"], PageWidth :> 700, 
       PrintingOptions -> {
        "FirstPageHeader" -> True, "InnerOuterMargins" -> {21, 61}, 
         "PageHeaderMargins" -> {28, 28}, "PaperOrientation" -> "Portrait", 
         "PaperSize" -> {504, 720}, 
         "PrintingMargins" -> {{20, 20}, {54, 54}}}, CellLabelAutoDelete -> 
       False, ShowSyntaxStyles -> False, MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          CellChangeTimes -> {3.7936369320077753`*^9}, MenuCommandKey :> None,
           FontFamily -> "Verdana", FontSize -> 42, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[0.1215, 0.3019, 0.5019], FontFamily -> "Courier", 
              FontSize -> 36, FontWeight -> Plain]], "SectionNumber"], 
          CellMargins -> {{96, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Fira Sans", FontSize -> 42, 
          FontWeight -> "Regular", FontSlant -> "Plain", FontColor -> 
          RGBColor[0.1215, 0.3019, 0.5019], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]\[VeryThinSpace]", FontColor -> 
              GrayLevel[0.55], FontFamily -> "Source Sans Pro", FontSize -> 
              36, FontWeight -> "Plain"]], "SectionNumber"], 
          CellMargins -> {{112, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CellChangeTimes -> {3.652728456208679*^9, 3.652728527108994*^9}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Fira Sans", FontSize -> 42, 
          FontWeight -> "Regular", FontSlant -> "Plain", FontColor -> 
          RGBColor[0.1215, 0.3019, 0.5019], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Fira Sans", FontSize -> 42, FontWeight -> "Regular", FontSlant -> 
          "Plain", FontColor -> RGBColor[0.1215, 0.3019, 0.5019]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionBar"], FontFamily -> "Source Sans Pro", 
          FontWeight -> "Light", FontColor -> GrayLevel[0.55]], 
         Cell[
          StyleData["SectionBar", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbatNumber"], FontFamily -> "Fira Sans", 
          FontSize -> 42, FontWeight -> "Regular", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0.55]], 
         Cell[
          StyleData["SectionNoDingbatNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> "Source Sans Pro", 
          FontWeight -> "SemiBold", FontSlant -> "Plain", FontColor -> 
          RGBColor[0.1215, 0.3019, 0.5019]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], CellMargins -> {{64, 20}, {12, 24}}, 
          CellChangeTimes -> {3.793625144703589*^9, 3.794773344390555*^9}, 
          ParagraphIndent -> -46, TabSpacings -> {1.3}, FontFamily -> 
          "Fira Sans", FontSize -> 42, FontWeight -> "Regular", 
          FontTracking -> -1, FontColor -> RGBColor[0.1215, 0.3019, 0.5019]], 
         
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}, ParagraphIndent -> -27]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellMargins -> {{66, 10}, {4, 30}}, 
          PageBreakWithin -> False, PageBreakBelow -> False, FontFamily -> 
          "Fira Sans", FontSize -> 23, FontWeight -> "SemiBold", FontSlant -> 
          "Plain", FontTracking -> -0.5, FontColor -> 
          RGBColor[0.1215, 0.3019, 0.5019]], 
         Cell[
          StyleData["Subsection", "Printout"], 
          CellMargins -> {{66, Automatic}, {Automatic, 30}}], 
         Cell[
          StyleData["Section", "Printout"], CellMargins -> {{4, 4}, {6, 24}}, 
          Hyphenation -> False]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesSubsection"], 
          CellMargins -> {{64, Inherited}, {4, 16}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 23, FontWeight -> "SemiBold", 
          FontSlant -> "Plain", FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesSubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {4, 16}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "SubsectionUnder", StyleDefinitions -> StyleData["Subsection"]], 
          CellMargins -> {{64, 20}, {9, 4}}], 
         Cell[
          StyleData["SubsectionUnder", "Printout"], 
          CellMargins -> {{4, 4}, {9, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], 
          CellMargins -> {{64, Inherited}, {2, 32}}, 
          CellChangeTimes -> {3.79362446876149*^9}, FontFamily -> "Fira Sans",
           FontSize -> 19, FontWeight -> "SemiBold", FontSlant -> "Italic", 
          FontColor -> RGBColor[0.1215, 0.3019, 0.5019]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 14}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubsubsectionTopMargin"], 
          CellMargins -> {{64, Inherited}, {2, 14}}, FontFamily -> 
          "Fira Sans", FontSize -> 19, FontWeight -> "SemiBold", FontSlant -> 
          "Italic", FontColor -> RGBColor[0.1215, 0.3019, 0.5019]], 
         Cell[
          StyleData["SubsubsectionTopMargin", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 14}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsubsection"], 
          CellMargins -> {{64, Inherited}, {2, 32}}, FontFamily -> 
          "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", 
          FontSlant -> "Plain", FontColor -> GrayLevel[0.45]], 
         Cell[
          StyleData["Subsubsection", "Printout"], 
          CellMargins -> {{64, Inherited}, {6, 14}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], CellMargins -> {{66, 10}, {4, 12}}, 
          ReturnCreatesNewCell -> True, FontFamily -> "Source Serif Pro", 
          FontSize -> 15, FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesText"], CellMargins -> {{66, 10}, {2, 0}}, 
          ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesText", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ResourcesLink"], CellMargins -> {{66, 10}, {2, 0}}, 
          ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", 
          FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Italic", 
          FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["ResourcesLink", "Printout"], 
          CellMargins -> {{66, 10}, {2, 0}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeCaption"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellMargins -> {{66, 10}, {4, 12}}, PageBreakBelow -> False, 
          CellFrameColor -> GrayLevel[0.4], LineSpacing -> {1.3, 1., 2.}, 
          MenuSortingValue -> 10010, MenuCommandKey :> "1", FontFamily -> 
          "Source Sans Pro", FontSize -> 16, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["CodeCaption", "Printout"], 
          CellMargins -> {{66, 10}, {4, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{66, 10}, {3, 7}}, 
          ShowCellLabel -> False, SpanMaxSize -> 1, FontSize -> 15, 
          FontWeight -> Plain], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{66, 10}, {3, 7}}, 
          CellChangeTimes -> {{3.793005520696594*^9, 
           3.7930055209728937`*^9}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], PageWidth :> 800, 
          CellMargins -> {{66, 10}, {14, 7}}, ShowCellLabel -> False, 
          FontSize -> 15], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{66, 10}, {14, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{66, 10}, {25, 10}}, 
          SpanMaxSize -> 1, MenuSortingValue -> 1500, FontSize -> 15, 
          FontWeight -> Plain], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{66, 10}, {15, 10}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"], 
          CellMargins -> {{66, Inherited}, {2, 12}}, StripStyleOnPaste -> 
          True, DefaultFormatType -> TraditionalForm, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 0, 
          SingleLetterItalics -> True, MenuSortingValue -> 1700, FontFamily -> 
          "Source Serif Pro", FontSize -> 15, FontWeight -> "Regular", 
          FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> GrayLevel[0.], 
          UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
         Cell[
          StyleData["DisplayFormula", "Printout"], 
          CellMargins -> {{66, Inherited}, {2, 12}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "DisplayList", StyleDefinitions -> StyleData["DisplayFormula"]], 
          ShowGroupOpener -> False, CellMargins -> {{66, 3}, {0, 4}}, 
          CellGroupingRules -> OutputGrouping, MenuSortingValue -> None], 
         Cell[
          StyleData["DisplayList", "Printout"], 
          CellMargins -> {{66, 3}, {0, 4}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "DisplayFormulaNumbered", StyleDefinitions -> 
           StyleData["DisplayFormula"]], CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["DisplayFormulaNumbered"], ")"}], 
              "DisplayFormulaEquationNumber"]}, {None, None}}, 
          CounterIncrements -> "DisplayFormulaNumbered", MenuSortingValue -> 
          1710, FontFamily -> "Source Serif Pro", FontSize -> 15, FontWeight -> 
          "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Printout"], 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"], 
          CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
          LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> 
          "Helvetica Neue", FontSize -> 9, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.5]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Message"], Editable -> False, 
          CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, 
          CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
          "PlainText", StripStyleOnPaste -> True, PageBreakWithin -> False, 
          GroupPageBreakWithin -> False, GeneratedCell -> True, 
          CellAutoOverwrite -> True, ShowCellLabel -> False, 
          DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Output"], 
          ShowAutoStyles -> False, ShowSyntaxStyles -> False, 
          AutoStyleOptions -> {
           "StringStyle" -> None, "SyntaxErrorStyle" -> None}, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
          PasteAutoQuoteCharacters -> {}, LanguageCategory -> None, 
          FormatType -> InputForm, ShowStringCharacters -> False, 
          CounterIncrements -> "Message", MenuSortingValue -> 1600, 
          StyleMenuListing -> None, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize -> 11, FontColor -> 
          RGBColor[0.5072, 0.16933, 0.15221]], 
         Cell[
          StyleData["Message", "Printout"], 
          CellMargins -> {{100, Inherited}, {Inherited, Inherited}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, FontColor -> 
          GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Inline and special formatting", "Section", 
       CellChangeTimes -> {{3.646681732592888*^9, 3.646681749414035*^9}, {
        3.798737233334754*^9, 3.798737234059868*^9}}], 
      Cell[
       StyleData["SSI"], 
       ConversionRules :> {
        "TeX" -> {{"\\textit{", Automatic, "}"}, {"", Automatic, ""}}}, 
       StyleMenuListing -> None, FontFamily -> "Source Serif Pro", FontWeight -> 
       "Regular", FontSlant -> "Italic", 
       PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
      Cell[
       StyleData["Graphics"], MenuSortingValue -> None], 
      Cell[
       StyleData["Graphics3D"], MenuSortingValue -> None], 
      Cell[
       StyleData["TraditionalForm"], TextClipboardType -> "PlainText", 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\[InlinePart]", "<->" -> "\[TwoWayRule]", ParentList}, 
       ShowSyntaxStyles -> False, LineSpacing -> {1.25, 0, 2}, AutoSpacing -> 
       False, SingleLetterItalics -> True, TraditionalFunctionNotation -> 
       True, DelimiterMatching -> None, LinebreakSemicolonWeighting -> 
       "Normal", StyleMenuListing -> None, FontFamily -> "Source Serif Pro", 
       FontSize -> 1.02 Inherited, FontTracking -> "Plain", 
       PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
      Cell[
       StyleData["StandardForm"], 
       InputAutoReplacements -> {
        "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> "\[LessEqual]", 
         ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]",
          "@>" -> "\\[InlinePart]", "<->" -> "\[UndirectedEdge]", ParentList},
        LineSpacing -> {1.25, 0, 2}, SingleLetterItalics -> False, 
       StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["OutputForm"], PageWidth :> Infinity, TextAlignment -> Left, 
       LineSpacing -> {0.6, 1}, AutoQuoteCharacters -> {}, 
       PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None, FontFamily -> 
       "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       StyleData["InputForm"], PageWidth :> Infinity, 
       InputAutoReplacements -> {}, AllowInlineCells -> False, Hyphenation -> 
       False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
       AutoSpacing -> False, NumberMarks -> True, AutoNumberFormatting -> 
       False, StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
       PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Link"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
             Inherited, Inherited 1.]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["Link", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DetailsLink"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
             Inherited, Inherited 1.]], FontColor -> GrayLevel[0], 
          ButtonBoxOptions -> {
           ButtonFunction :> (
             Function[$CellContext`t, 
              NotebookFind[$CellContext`t, "Notes", All, CellStyle]; 
              NotebookFind[$CellContext`t, "NotesSection", All, CellStyle, 
                AutoScroll -> Top]][
              Documentation`HelpLookup[
               StringJoin["ref/", #]]]& ), ButtonSource -> ButtonContents, 
            Evaluator -> Automatic}], 
         Cell[
          StyleData["DetailsLink", "Printout"], FontFamily -> 
          "Source Sans Pro", FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["LinkAlt"], FontFamily -> "Source Sans Pro", FontSize :> 
          If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
             Inherited, Inherited 1.]], FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["LinkAlt", "Printout"], FontFamily -> "Source Sans Pro", 
          FontSize :> If[CurrentValue[
              EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
            Inherited, 
            If[CurrentValue[
               EvaluationCell[], "FontFamily"] === "Source Sans Pro", 
             Inherited, Inherited 0.88]], FontColor -> GrayLevel[0]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> None, FontColor -> 
          RGBColor[0.3, 0.35, 0.5]], 
         Cell[
          StyleData["Hyperlink", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Crosslink"], 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               
               NotebookLocate[#2, "OpenInNewWindow" -> 
                CurrentValue["HyperlinkModifierKey"]]}]& ), Evaluator -> None,
             Method -> "Queued"}], 
         Cell[
          StyleData["Crosslink", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeLink"], 
          ButtonBoxOptions -> {
           Appearance -> None, ButtonFunction :> (Documentation`HelpLookup[
              Part[#, 1]]& ), ButtonSource -> ButtonContents, Evaluator -> 
            Automatic}], 
         Cell[
          StyleData["CodeLink", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["FunctionLink"], FontFamily -> "Source Sans Pro", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[0.3, 0.35, 0.5], 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               NotebookLocate[#2]}]& ), Evaluator -> None, Method -> 
            "Queued"}], 
         Cell[
          StyleData["FunctionLink", "Printout"], FontFamily -> 
          "Source Sans Pro", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
          FontColor -> RGBColor[0.3, 0.35, 0.5], 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               NotebookLocate[#2]}]& ), Evaluator -> None, Method -> 
            "Queued"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InlineCode"], StyleMenuListing -> None, FontFamily -> 
          "Source Sans Pro"], 
         Cell[
          StyleData["InlineCode", "Printout"], MenuSortingValue -> 10000, 
          StyleMenuListing -> None, FontFamily -> "Source Code Pro", 
          FontSize -> 0.92 Inherited, FontWeight -> "SemiBold"]}, Closed]], 
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro", FontSize -> 1. Inherited], 
      Cell[
       StyleData["NoLabel"], 
       GeneratedCellStyles -> {"Output" -> "ExerciseOutput"}, ShowCellLabel -> 
       False], 
      Cell[
       StyleData["MenuName"], FontFamily -> "Verdana", FontWeight -> "Bold", 
       FontColor -> GrayLevel[0.286275]], 
      Cell[
       StyleData["KeyEvent"], CellFrame -> {{0.5, 0.5}, {0.5, 0.5}}, 
       CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> GrayLevel[0.7],
        FontFamily -> "Verdana", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["KeyEventDelimiter"], FontColor -> GrayLevel[0.5]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeVariable"], FontFamily -> "Source Serif Pro", 
          FontSize -> 1.05 Inherited, FontWeight -> "Plain", FontSlant -> 
          "Italic"], 
         Cell[
          StyleData["CodeVariable", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CodeVariableLrg"], FontFamily -> "Source Serif Pro", 
          FontSize -> 1.1 Inherited, FontWeight -> "Plain", FontSlant -> 
          "Italic"], 
         Cell[
          StyleData["CodeVariableLrg", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Key Styles", "Subsubsection"], 
         Cell[
          StyleData["Key0"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {"Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key1"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {2 -> GrayLevel[0.8352941176470589]}, 
                  "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key2"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}], 
         Cell[
          StyleData["Key3"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              TagBox[
               GridBox[{{
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #2, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #3, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> 
                   GrayLevel[0.9333333333333333], StripOnInput -> False], 
                  ItemBox[
                   
                   TemplateBox[{"\[ThickSpace]", #4, "\[ThickSpace]"}, 
                    "RowDefault"], Background -> GrayLevel[1], StripOnInput -> 
                   False]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "ColumnsIndexed" -> {
                   2 -> GrayLevel[0.8352941176470589], 3 -> 
                    GrayLevel[0.8352941176470589], 4 -> 
                    GrayLevel[0.8352941176470589]}, "Rows" -> {{None}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{1.45}}},
                 GridBoxSpacings -> {"Columns" -> {{0}}}, 
                BaselinePosition -> {{1, 1}, Baseline}], "Grid"], 
              RoundingRadius -> 4, Background -> 
              GrayLevel[0.9333333333333333], 
              FrameMargins -> {{0, 0}, {-1, -1}}, FrameStyle -> {
                GrayLevel[0.8352941176470589], 
                AbsoluteThickness[1]}, BaselinePosition -> Baseline, 
              StripOnInput -> False]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Entity styles", "Subsubsection"], 
         Cell[
          StyleData["Entity"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, 
                   BaseStyle -> {
                    FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {0.5, 3}}, 
               ImageMargins -> {{2, 2}, {1, 1}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontFamily -> "Source Sans Pro", 
                    FontWeight -> "Plain", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontColor -> RGBColor[0.395437, 0.20595, 0.061158]}, 
                  BaselinePosition -> Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {
                 FontWeight -> "Plain", "OperatorSubstitution" -> False}}]& ),
             Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, BaseStyle -> {FontColor -> GrayLevel[0]}, 
                 BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               RGBColor[1., 0.504768, 0.], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]], 
                    StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0.65], 
                    Selectable -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Helvetica"}], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontWeight -> "Bold", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0]], 
                   StyleBox[
                    RowBox[{"(", #4, ")"}], FontWeight -> "Plain", FontFamily -> 
                    "Source Sans Pro", FontColor -> GrayLevel[0], Selectable -> 
                    False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   StyleBox[#, FontColor -> GrayLevel[0]]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontWeight -> "Plain", FontFamily -> "Helvetica", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityProperty"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> 
                  RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                Baseline], FrameStyle -> 
               RGBColor[0.94227, 0.703639, 0.033387], Background -> 
               RGBColor[1., 0.980392, 0.921569], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4], #3, 
              BaseStyle -> {
               FontWeight -> "Plain", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityValue"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              GridBox[{{#, #2}}, GridBoxAlignment -> {"Rows" -> {{Baseline}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}}, 
               BaselinePosition -> {1, 1}], Background -> 
              RGBColor[{0.9921568627450981, 0.9529411764705882, 
                0.8509803921568627}], BaselinePosition -> Baseline, 
              FrameMargins -> {{1, 1}, {1, 1}}, ImageMargins -> 2, FrameStyle -> 
              RGBColor[{0.9333333333333333, 0.8470588235294118, 
                0.5529411764705883}], RoundingRadius -> 5]& )}]}, Closed]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Specialized", "Section", 
       CellChangeTimes -> {{3.64661165091824*^9, 3.646611654013329*^9}, 
         3.6485723794335403`*^9, 3.651347081728628*^9, 3.651347179462186*^9, 
         3.651347384135805*^9, 3.651348171662589*^9, {3.7114709033696413`*^9, 
         3.711470909048764*^9}, {3.748633204235283*^9, 
         3.748633208513935*^9}, {3.798737966395212*^9, 
         3.7987379667254887`*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TextFirst"], CellMargins -> {{66, 10}, {4, 72}}, 
          ReturnCreatesNewCell -> True, FontFamily -> "Source Serif Pro", 
          FontSize -> 15, FontColor -> GrayLevel[0]], 
         Cell[
          StyleData["Text", "Printout"], CellMargins -> {{66, 10}, {7, 7}}]}, 
        Closed]], 
      Cell[
       StyleData["InitializationCell"], Background -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Print"], CellMargins -> {{99, 10}, {4, 4}}, FontSize -> 
          15], 
         Cell[
          StyleData["Print", "Presentation"], 
          CellMargins -> {{100, Inherited}, {1.5 Inherited, 1.5 Inherited}}], 
         
         Cell[
          StyleData["Print", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          FontSize -> 18], 
         Cell[
          StyleData["Print", "Condensed"], 
          CellMargins -> {{18, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Print", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Print", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[0.8, 0.043, 0.008]], CellMargins -> {{81, 10}, {4, 8}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "Subitem", "*" -> "Subitem"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "Item", 
          CounterAssignments -> {{"Subitem", 0}, {"Subsubitem", 0}}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Serif Pro", 
          FontSize -> 15, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Item", "Printout"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            GrayLevel[0.2]], 
          CellMargins -> {{80, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          MenuSortingValue -> 1600, FontFamily -> "Source Sans Pro", FontSize -> 
          15, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.2]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{80, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{85, 10}, {4, 8}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain", FontSlant -> 
          "Plain"], 
         Cell[
          StyleData["ItemNumbered", "Printout"], 
          CellMargins -> {{90, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["TechNoteItem"], PageWidth :> 700, CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontSize -> 12, FontWeight -> 
            Bold, FontColor -> GrayLevel[0.25]], 
          CellMargins -> {{93, Inherited}, {4, 8}}, ReturnCreatesNewCell -> 
          True, CellFrameLabelMargins -> 4, 
          CellChangeTimes -> {{3.651515120816633*^9, 3.651515125814807*^9}, 
            3.6515155174947033`*^9}, LineSpacing -> {1.25, 1., 2.}, 
          CounterIncrements -> "ItemNumbered", MenuSortingValue -> 10040, 
          FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["TechNoteItem", "Printout"], 
          CellMargins -> {{93, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Echo"], 
          CellMargins -> {{99, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Echo", "Printout"], 
          CellMargins -> {{99, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Epigraph"], CellMargins -> {{100, 78}, {6, 24}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, 
          CellFrameLabelMargins -> 8, TextAlignment -> Left, Hyphenation -> 
          True, HyphenationOptions -> {"HyphenationMinLengths" -> {3, 5}}, 
          LineSpacing -> {1, 2}, TabSpacings -> {1.2, 2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 18, FontWeight -> "Plain", FontSlant -> 
          "Plain"], 
         Cell[
          StyleData["Epigraph", "Printout", StyleDefinitions -> None]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["EpigraphAuthor"], CellMargins -> {{125, 100}, {12, 12}}, 
          TextAlignment -> Left, LineSpacing -> {1, 2}, 
          ParagraphIndent -> -17, TabSpacings -> {1.5, 2.5}, FontFamily -> 
          "Source Sans Pro", FontSize -> 16, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontTracking -> -0.05], 
         Cell[
          StyleData["EpigraphAuthor", "Printout", StyleDefinitions -> None]]},
         Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ReferenceSection"], PageWidth :> 700, 
          CellFrame -> {{0, 0}, {0, 3}}, 
          CellMargins -> {{64, Inherited}, {8, 60}}, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> 
          False, CellFrameMargins -> {{8, 8}, {4, 6}}, CellFrameColor -> 
          RGBColor[0.1215, 0.3019, 0.5019], FontFamily -> "Source Sans Pro", 
          FontSize -> 18, FontWeight -> "Plain", FontSlant -> "Italic", 
          FontColor -> RGBColor[0.1215, 0.3019, 0.5019], 
          GridBoxOptions -> {GridBoxAlignment -> {}}], 
         Cell[
          StyleData["ReferenceSection", "Printout"], 
          CellMargins -> {{64, Inherited}, {8, 30}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Reference"], CellDingbat -> Cell[
            TextData[{
              CounterBox["Reference"]}], "SR", FontSize -> 13, 
            CellSize -> {30, Inherited}, TextAlignment -> Right], 
          CellMargins -> {{80, 10}, {3, 4}}, 
          CellFrameLabels -> {{None, None}, {None, None}}, 
          CellFrameLabelMargins -> 8, 
          CellChangeTimes -> {{3.7385995432110577`*^9, 3.738599549834622*^9}},
           LineSpacing -> {1, 2}, ParagraphIndent -> -8, 
          TabSpacings -> {0.7, 2.5}, CounterIncrements -> "Reference", 
          MenuSortingValue -> 1870, FontFamily -> "Source Sans Pro", FontSize -> 
          14, FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["Reference", "Printout", StyleDefinitions -> None], 
          CellMargins -> {{84, 10}, {3, 4}}, TabSpacings -> {1.2, 2.5}]}, 
        Closed]]}, Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.1 for Mac OS X x86 (64-bit) (March 13, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FirstCellOnPage"->{
  Cell[26708, 633, 1594, 24, 70, "Text",ExpressionUUID->"8642cb72-d7a6-40d3-8c1b-0b7ecc3ec59f",
   CellTags->{"FirstCellOnPage", "p-438"},
   CellID->2126557816],
  Cell[61830, 1403, 26553, 636, 70, "Output",ExpressionUUID->"4afae1cf-5743-469a-956d-3e03c51717fd",
   CellTags->{"FirstCellOnPage", "p-439"}],
  Cell[160860, 3418, 5923, 108, 70, "Text",ExpressionUUID->"8f6a5ef1-84dc-42a8-8c86-4764bef75db3",
   CellTags->{"FirstCellOnPage", "p-440"},
   CellID->669232792],
  Cell[207524, 4359, 5005, 74, 70, "Text",ExpressionUUID->"97ff346b-f727-4043-9512-5227331fbece",
   CellTags->{"FirstCellOnPage", "p-441"},
   CellID->1673905225]},
 "p-438"->{
  Cell[26708, 633, 1594, 24, 70, "Text",ExpressionUUID->"8642cb72-d7a6-40d3-8c1b-0b7ecc3ec59f",
   CellTags->{"FirstCellOnPage", "p-438"},
   CellID->2126557816]},
 "p-439"->{
  Cell[61830, 1403, 26553, 636, 70, "Output",ExpressionUUID->"4afae1cf-5743-469a-956d-3e03c51717fd",
   CellTags->{"FirstCellOnPage", "p-439"}]},
 "p-440"->{
  Cell[160860, 3418, 5923, 108, 70, "Text",ExpressionUUID->"8f6a5ef1-84dc-42a8-8c86-4764bef75db3",
   CellTags->{"FirstCellOnPage", "p-440"},
   CellID->669232792]},
 "p-441"->{
  Cell[207524, 4359, 5005, 74, 70, "Text",ExpressionUUID->"97ff346b-f727-4043-9512-5227331fbece",
   CellTags->{"FirstCellOnPage", "p-441"},
   CellID->1673905225]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FirstCellOnPage", 298106, 6122},
 {"p-438", 298757, 6134},
 {"p-439", 298933, 6138},
 {"p-440", 299091, 6141},
 {"p-441", 299269, 6145}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[674, 24, 64, 1, 70, "Subsection",ExpressionUUID->"0d02a483-bf3d-4961-9661-4ad1b09c377a",
 CellID->727362818],
Cell[741, 27, 1469, 26, 70, "Text",ExpressionUUID->"86dd2a2d-0fcd-4d25-a2af-4f10c2d447b7",
 CellID->1795074772],
Cell[2213, 55, 1563, 23, 70, "Text",ExpressionUUID->"03488332-a7fc-440c-9469-51d95b9a4c77",
 CellID->1971419948],
Cell[3779, 80, 1010, 16, 70, "Text",ExpressionUUID->"6d41e3b0-475d-4801-961a-b4a59456c9ff",
 CellID->129876473],
Cell[CellGroupData[{
Cell[4814, 100, 402, 10, 70, "Input",ExpressionUUID->"bc60479b-c332-4cf5-aec7-cd6f92787fc0"],
Cell[5219, 112, 20003, 494, 70, "Output",ExpressionUUID->"1be14b61-6f82-4b8c-91bd-ffc78faaac8d"]
}, {2}]],
Cell[25234, 609, 1471, 22, 70, "Text",ExpressionUUID->"6e38cf59-093d-4d7c-a8bb-a7722eb64ebe",
 CellID->990496359],
Cell[26708, 633, 1594, 24, 70, "Text",ExpressionUUID->"8642cb72-d7a6-40d3-8c1b-0b7ecc3ec59f",
 CellTags->{"FirstCellOnPage", "p-438"},
 CellID->2126557816],
Cell[CellGroupData[{
Cell[28327, 661, 561, 14, 70, "Input",ExpressionUUID->"9d0ab888-65f6-4c9a-b056-7aad9a870e2c"],
Cell[28891, 677, 24536, 566, 70, "Output",ExpressionUUID->"0b1fd17e-4808-42f7-ac1a-34644308baf9"]
}, {2}]],
Cell[53439, 1246, 1577, 23, 70, "Text",ExpressionUUID->"fa99b83b-ee65-4320-a89e-d103fcfffaea",
 CellID->486876491],
Cell[55019, 1271, 3128, 61, 70, "Text",ExpressionUUID->"79dfcdce-2507-441d-b460-628a2333a187",
 CellID->1020489167],
Cell[58150, 1334, 1475, 22, 70, "Text",ExpressionUUID->"06ef3898-dc66-45ba-8186-87472d7208d1",
 CellID->1557024827],
Cell[59628, 1358, 1557, 23, 70, "Text",ExpressionUUID->"7a1aa63a-6a59-4283-9436-7404ed5cf831",
 CellID->1828028694],
Cell[CellGroupData[{
Cell[61210, 1385, 617, 16, 70, "Input",ExpressionUUID->"bec0d349-dd23-46b7-9193-3bc40638bc8a"],
Cell[61830, 1403, 26553, 636, 70, "Output",ExpressionUUID->"4afae1cf-5743-469a-956d-3e03c51717fd",
 CellTags->{"FirstCellOnPage", "p-439"}]
}, {2}]],
Cell[88395, 2042, 1440, 21, 70, "Text",ExpressionUUID->"f3f2c84f-414a-44ed-93c2-5099e5b524cf"],
Cell[CellGroupData[{
Cell[89860, 2067, 2389, 65, 70, "Input",ExpressionUUID->"fd283978-3a55-4da7-a45a-4db9c76df7be"],
Cell[92252, 2134, 60350, 1163, 70, "Output",ExpressionUUID->"e2b17c2a-27f0-435d-bd5d-b000181bfe92"]
}, {2}]],
Cell[152614, 3300, 3861, 53, 70, "Text",ExpressionUUID->"9469f047-c56b-49c8-947f-0dccc5ac7f57",
 CellID->1777206076],
Cell[156478, 3355, 4379, 61, 70, "Text",ExpressionUUID->"a7b53077-35c7-4937-b66c-0ffff2885563",
 CellID->152473209],
Cell[160860, 3418, 5923, 108, 70, "Text",ExpressionUUID->"8f6a5ef1-84dc-42a8-8c86-4764bef75db3",
 CellTags->{"FirstCellOnPage", "p-440"},
 CellID->669232792],
Cell[166786, 3528, 4700, 69, 70, "Text",ExpressionUUID->"727855c5-f149-4565-b660-98c461d9e691",
 CellID->1423675805],
Cell[171489, 3599, 4215, 59, 70, "Text",ExpressionUUID->"a920af96-1093-4c69-84d8-0783e0eeeb37",
 CellID->456459761],
Cell[CellGroupData[{
Cell[175729, 3662, 810, 21, 70, "Input",ExpressionUUID->"6f59d908-491c-4d4b-95ef-9c62e672e745"],
Cell[176542, 3685, 21641, 531, 70, "Output",ExpressionUUID->"a1c03a9e-6248-4b49-900b-15343a26d912"]
}, {2}]],
Cell[198195, 4219, 4589, 70, 70, "Text",ExpressionUUID->"761a2070-e67a-47a7-82ff-b0c203b8755d",
 CellID->907616043],
Cell[202787, 4291, 4734, 66, 70, "Text",ExpressionUUID->"0c1b93fc-c4ad-40fc-83a1-89f89ee7b890",
 CellID->726490060],
Cell[207524, 4359, 5005, 74, 70, "Text",ExpressionUUID->"97ff346b-f727-4043-9512-5227331fbece",
 CellTags->{"FirstCellOnPage", "p-441"},
 CellID->1673905225],
Cell[212532, 4435, 5003, 73, 70, "Text",ExpressionUUID->"2102eb50-072e-4ade-bce2-99ef9df19025",
 CellID->1289340875],
Cell[217538, 4510, 5132, 84, 70, "Text",ExpressionUUID->"b6fe40ee-928e-457f-92dc-2db972c308bb",
 CellID->1842087895],
Cell[222673, 4596, 4358, 64, 70, "Text",ExpressionUUID->"8998e486-07d3-4ec1-9007-c32a1067495d",
 CellID->1846996113],
Cell[227034, 4662, 5176, 80, 70, "Text",ExpressionUUID->"38ce88c3-7e8d-4385-a892-27eb869a376e",
 CellID->587553806],
Cell[232213, 4744, 6477, 125, 70, "Text",ExpressionUUID->"c92cc3a0-08d3-4a51-83ee-7b514cf23695",
 CellID->887008536]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
